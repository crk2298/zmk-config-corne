#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        return: return {
            compatible = "zmk,behavior-tap-dance";
            label = "RETURN";
            #binding-cells = <0>;
            bindings = <&lt 1 RETURN>, <&kp RETURN>;

            tapping-term-ms = <170>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&lt 2 BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <170>;
        };

        space: space {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE";
            #binding-cells = <0>;
            bindings = <&lt 3 SPACE>, <&kp SPACE>;

            tapping-term-ms = <170>;
        };

        s: s {
            compatible = "zmk,behavior-tap-dance";
            label = "S";
            #binding-cells = <0>;
            bindings = <&mt LEFT_CONTROL S>, <&kp S>;
        };

        t: t {
            compatible = "zmk,behavior-tap-dance";
            label = "T";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT T>, <&kp T>;
        };

        r: r {
            compatible = "zmk,behavior-tap-dance";
            label = "R";
            #binding-cells = <0>;
            bindings = <&mt LEFT_GUI R>, <&kp R>;
        };

        a: a {
            compatible = "zmk,behavior-tap-dance";
            label = "A";
            #binding-cells = <0>;
            bindings = <&mt LEFT_ALT A>, <&kp A>;
        };

        n: n {
            compatible = "zmk,behavior-tap-dance";
            label = "N";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_SHIFT N>, <&kp N>;
        };

        e: e {
            compatible = "zmk,behavior-tap-dance";
            label = "E";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_CONTROL E>, <&kp E>;
        };

        i: i {
            compatible = "zmk,behavior-tap-dance";
            label = "I";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_GUI I>, <&kp I>;
        };

        o: o {
            compatible = "zmk,behavior-tap-dance";
            label = "O";
            #binding-cells = <0>;
            bindings = <&mt LEFT_ALT O>, <&kp O>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W           &kp F               &kp P             &kp B     &kp J    &kp L              &kp U                &kp Y            &kp SEMI        &to 5
&kp LCTRL  &mt LEFT_ALT A  &mt LEFT_GUI R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G     &kp M    &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E  &mt RIGHT_GUI I  &mt LEFT_ALT O  &kp F11
&kp LSHFT  &kp Z           &kp X           &kp C               &kp D             &kp V     &kp K    &kp H              &kp COMMA            &kp DOT          &kp FSLH        &to 4
                                           &kp ESCAPE          &none             &space    &return  &backspace         &kp DEL
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &none   &none            &none              &none          &none         &none
&none       &kp SEMI          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &none   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_GUI  &kp LEFT_ALT  &trans
&none       &kp TILDE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &trans  &trans           &trans             &trans         &trans        &trans
                                            &kp PERIOD    &kp N0        &kp MINUS            &none   &trans           &none
            >;
        };

        Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &none      &none             &kp SLASH             &none                  &none        &none  &none            &none              &none          &none         &none
&none       &kp SEMI   &kp EXCL          &kp SQT               &kp HASH               &trans       &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_GUI  &kp LEFT_ALT  &none
&none       &kp TILDE  &kp LEFT_BRACKET  &trans                &kp RIGHT_BRACKET      &trans       &none  &none            &none              &none          &none         &none
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS    &none  &trans           &none
            >;
        };

        Arrows {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans    &trans  &trans          &trans          &trans        &trans           &trans
&trans  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans        &trans        &trans            &trans          &trans    &trans  &trans          &trans          &trans        &trans           &trans
                                    &trans            &trans          &trans    &trans  &trans          &trans
            >;
        };

        Qwerty {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E       &kp R         &kp T        &kp Y    &kp U          &kp I      &kp O       &kp P          &trans
&kp LEFT_SHIFT    &kp A  &kp S  &kp D       &kp F         &kp G        &kp H    &kp J          &kp K      &kp L       &kp SEMICOLON  &trans
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C       &kp V         &kp B        &kp N    &kp M          &kp COMMA  &kp PERIOD  &kp SLASH      &to 0
                                &kp ESCAPE  &kp LEFT_ALT  &kp SPACE    &kp RET  &kp BACKSPACE  &trans
            >;
        };

        League {
            bindings = <
&kp ESCAPE        &kp TAB           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &none      &trans         &trans  &trans  &trans  &to 0
&kp LEFT_SHIFT    &kp LEFT_SHIFT    &kp Q         &kp W         &kp E         &kp R           &kp T      &trans         &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_CONTROL  &trans        &trans        &kp G         &kp B           &trans     &trans         &trans  &trans  &trans  &to 0
                                                  &trans        &kp LEFT_ALT  &kp SPACE       &kp ENTER  &kp BACKSPACE  &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &trans            &trans          &trans  &trans
            >;
        };

        Functions {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
